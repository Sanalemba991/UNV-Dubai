<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>UNV Security Camera Carousel</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @keyframes fadeIn {
            from { opacity: 0; transform: scale(0.95); }
            to { opacity: 1; transform: scale(1); }
        }
        @keyframes slideIn {
            from { transform: translateX(100%) scale(0.9); opacity: 0; }
            to { transform: translateX(0) scale(1); opacity: 1; }
        }
        .carousel-image {
            object-fit: cover;
            width: 100%;
            height: 100%;
        }
    </style>
</head>
<body>
<div id="default-carousel" class="relative w-full h-[300px] sm:h-[400px] md:h-[500px] lg:h-[600px]" data-carousel="static">
    <!-- Carousel wrapper -->
    <div class="relative h-full overflow-hidden rounded-lg mt-4 sm:mt-6 md:mt-10">
        <!-- Item 1 -->
        <div class="duration-1000 ease-in-out absolute inset-0 transition-all transform translate-x-full opacity-0" data-carousel-item>
            <img
                src="/images/categories/products/hero/hero1.png"
                class="carousel-image absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 transform transition-all duration-700 hover:scale-105 hover:brightness-110"
                alt="3D Vector Security Camera"
            />
            <div class="absolute bottom-5 sm:bottom-8 md:bottom-10 left-1/2 -translate-x-1/2 bg-black/50 text-white px-3 py-1 sm:px-4 sm:py-2 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity text-sm sm:text-base">
                3D Vector Security Camera
            </div>
        </div>
        <!-- Item 2 -->
        <div class="duration-1000 ease-in-out absolute inset-0 transition-all transform translate-x-full opacity-0" data-carousel-item>
            <img
                src="/images/categories/products/hero/hero2.png"
                class="carousel-image absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 transform transition-all duration-700 hover:scale-105 hover:brightness-110"
                alt="Home Security Camera"
            />
            <div class="absolute bottom-5 sm:bottom-8 md:bottom-10 left-1/2 -translate-x-1/2 bg-black/50 text-white px-3 py-1 sm:px-4 sm:py-2 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity text-sm sm:text-base">
                Home Security Camera
            </div>
        </div>
        <!-- Item 3 -->
        <div class="duration-1000 ease-in-out absolute inset-0 transition-all transform translate-x-full opacity-0" data-carousel-item>
            <img
                src="/images/categories/products/hero/hero3.png"
                class="carousel-image absolute block -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2 transform transition-all duration-700 hover:scale-105 hover:brightness-110"
                alt="CCTV Security Camera"
            />
            <div class="absolute bottom-5 sm:bottom-8 md:bottom-10 left-1/2 -translate-x-1/2 bg-black/50 text-white px-3 py-1 sm:px-4 sm:py-2 rounded-lg opacity-0 group-hover:opacity-100 transition-opacity text-sm sm:text-base">
                CCTV Security Camera
            </div>
        </div>
    </div>

    <!-- Slider indicators -->
    <div class="absolute z-30 flex -translate-x-1/2 bottom-3 sm:bottom-4 md:bottom-5 left-1/2 space-x-2 sm:space-x-3 rtl:space-x-reverse">
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full bg-white/50 hover:bg-white transition-colors" aria-current="true" aria-label="Slide 1" data-carousel-slide-to="0"></button>
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full bg-white/50 hover:bg-white transition-colors" aria-current="false" aria-label="Slide 2" data-carousel-slide-to="1"></button>
        <button type="button" class="w-2 h-2 sm:w-3 sm:h-3 rounded-full bg-white/50 hover:bg-white transition-colors" aria-current="false" aria-label="Slide 3" data-carousel-slide-to="2"></button>
    </div>

    <!-- Slider controls -->
    <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-2 sm:px-3 md:px-4 cursor-pointer group" data-carousel-prev>
        <span class="inline-flex items-center justify-center w-8 h-8 sm:w-9 sm:h-9 md:w-10 md:h-10 rounded-full bg-transparent hover:bg-blue-500/50 transition-all duration-200">
            <svg class="w-3 h-3 sm:w-4 sm:h-4 text-white rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4" />
            </svg>
            <span class="sr-only">Previous</span>
        </span>
    </button>
    <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-2 sm:px-3 md:px-4 cursor-pointer group" data-carousel-next>
        <span class="inline-flex items-center justify-center w-8 h-8 sm:w-9 sm:h-9 md:w-10 md:h-10 rounded-full bg-transparent hover:bg-blue-500/50 transition-all duration-200">
            <svg class="w-3 h-3 sm:w-4 sm:h-4 text-white rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
            </svg>
            <span class="sr-only">Next</span>
        </span>
    </button>
</div>

<script>
    class Carousel {
        private carousel: HTMLElement;
        private items: NodeListOf<HTMLElement>;
        private indicators: NodeListOf<HTMLElement>;
        private prevButton: HTMLElement;
        private nextButton: HTMLElement;
        private currentIndex: number;
        private autoSlideInterval: NodeJS.Timeout | null;

        constructor(carouselElement: HTMLElement) {
            this.carousel = carouselElement;
            this.items = this.carousel.querySelectorAll('[data-carousel-item]');
            this.indicators = this.carousel.querySelectorAll('[data-carousel-slide-to]');
            this.prevButton = this.carousel.querySelector('[data-carousel-prev]')!;
            this.nextButton = this.carousel.querySelector('[data-carousel-next]')!;
            
            this.currentIndex = 0;
            this.autoSlideInterval = null;
            
            this.initEventListeners();
            this.showItem(this.currentIndex);
            this.startAutoSlide();
        }
        
        initEventListeners() {
            // Indicator clicks
            this.indicators.forEach((indicator, index) => {
                indicator.addEventListener('click', () => this.goToSlide(index));
            });
            
            // Previous button
            this.prevButton.addEventListener('click', () => this.goToPrevSlide());
            
            // Next button
            this.nextButton.addEventListener('click', () => this.goToNextSlide());
        }
        
        showItem(index) {
            // Reset all items
            this.items.forEach((item) => {
                item.classList.remove('opacity-100', 'translate-x-0');
                item.classList.add('opacity-0', 'translate-x-full');
            });
            
            // Reset all indicators
            this.indicators.forEach((btn) => {
                btn.classList.remove('bg-white');
                btn.classList.add('bg-white/50');
                btn.setAttribute('aria-current', 'false');
            });
            
            // Show current item
            const currentItem = this.items[index];
            currentItem.classList.remove('opacity-0', 'translate-x-full');
            currentItem.classList.add('opacity-100', 'translate-x-0');
            
            // Activate current indicator
            const currentIndicator = this.indicators[index];
            currentIndicator.classList.remove('bg-white/50');
            currentIndicator.classList.add('bg-white');
            currentIndicator.setAttribute('aria-current', 'true');
        }
        
        goToSlide(index) {
            this.stopAutoSlide();
            this.currentIndex = index;
            this.showItem(this.currentIndex);
            this.startAutoSlide();
        }
        
        goToNextSlide() {
            this.currentIndex = (this.currentIndex + 1) % this.items.length;
            this.showItem(this.currentIndex);
        }
        
        goToPrevSlide() {
            this.currentIndex = (this.currentIndex - 1 + this.items.length) % this.items.length;
            this.showItem(this.currentIndex);
        }
        
        startAutoSlide() {
            this.stopAutoSlide(); // Clear any existing interval
            this.autoSlideInterval = setInterval(() => {
                this.goToNextSlide();
            }, 5000);
        }
        
        stopAutoSlide() {
            if (this.autoSlideInterval) {
                clearInterval(this.autoSlideInterval);
            }
        }
    }

    // Initialize carousel when DOM is fully loaded
    document.addEventListener('DOMContentLoaded', () => {
        const carouselElement = document.querySelector('[data-carousel="static"]') as HTMLElement;
        new Carousel(carouselElement);
    });
</script>
</body>
</html>
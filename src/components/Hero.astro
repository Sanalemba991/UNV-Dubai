---
// src/components/Carousel.astro

interface CarouselItem {
  title: string;
  description: string;
  ctaText: string;
  desktopImage: string;
  mobileImage: string;
  link: string;
}

const items: CarouselItem[] = [
  {
    title: "OUR PRODUCTS",
    description: "Cutting-edge surveillance solutions designed for superior performance.",
    ctaText: "Explore Our Products",
    desktopImage: "/images/categories/products/hero/Products.png",
    mobileImage: "/images/categories/products/hero/mobile2.png",
    link: "/products"
  },
  {
    title: "LATEST BLOGS",
    description: "Enhance your home's security with state-of-the-art monitoring solutions.",
    ctaText: "Discover More",
    desktopImage: "/images/categories/products/hero/Blog.png",
    mobileImage: "/images/categories/products/hero/mobile.png",
    link: "/blog"
  },
  {
    title: "INSIGHTS",
    description: "Top-tier surveillance solutions tailored for businesses and institutions.",
    ctaText: "Explore Insights",
    desktopImage: "/images/categories/products/hero/Insights.png",
    mobileImage: "/images/categories/products/hero/mobile1.png",
    link: "/insights"
  }
];
---

<!-- Carousel Structured Data for SEO -->
<script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "ItemList",
  "itemListElement": [
    {
      "@type": "ListItem",
      "position": 1,
      "item": {
        "@type": "WebPage",
        "name": "OUR PRODUCTS",
        "description": "Cutting-edge surveillance solutions designed for superior performance.",
        "url": "/products",
        "image": {
          "@type": "ImageObject",
          "url": "/images/categories/products/hero/Products.png",
          "width": 1920,
          "height": 1080
        }
      }
    },
    {
      "@type": "ListItem",
      "position": 2,
      "item": {
        "@type": "WebPage",
        "name": "LATEST BLOGS",
        "description": "Enhance your home's security with state-of-the-art monitoring solutions.",
        "url": "/blog",
        "image": {
          "@type": "ImageObject",
          "url": "/images/categories/products/hero/Blog.png",
          "width": 1920,
          "height": 1080
        }
      }
    },
    {
      "@type": "ListItem",
      "position": 3,
      "item": {
        "@type": "WebPage",
        "name": "INSIGHTS",
        "description": "Top-tier surveillance solutions tailored for businesses and institutions.",
        "url": "/insights",
        "image": {
          "@type": "ImageObject",
          "url": "/images/categories/products/hero/Insights.png",
          "width": 1920,
          "height": 1080
        }
      }
    }
  ]
}
</script>

<div class="carousel-wrapper mb-10">
    <div id="default-carousel" class="relative w-full" data-carousel="static">
        <!-- Carousel wrapper -->
        <div class="relative h-full overflow-hidden rounded-none">
            <!-- Items -->
            {items.map((item, index) => (
                <div class="duration-700 ease-in-out absolute inset-0 transition-all transform translate-x-full opacity-0" data-carousel-item>
                    <div class="carousel-item-container" onclick={`window.location.href='${item.link}'`}>
                        <!-- Desktop Image -->
                        <img
                            src={item.desktopImage}
                            class="carousel-image absolute block w-full h-full object-cover transition-all duration-500 hidden sm:block"
                            alt={`UNV ${item.title}`}
                            width="1920"
                            height="1080"
                            loading={index === 0 ? 'eager' : 'lazy'}
                        />
                        <!-- Mobile Image -->
                        <img
                            src={item.mobileImage}
                            class="carousel-image absolute block w-full h-full object-cover transition-all duration-500 sm:hidden"
                            alt={`UNV ${item.title} Mobile`}
                            width="600"
                            height="900"
                            loading={index === 0 ? 'eager' : 'lazy'}
                        />
                        <div class="carousel-caption">
                            <h3 class="text-xl sm:text-2xl md:text-3xl font-bold heading-font">{item.title}</h3>
                            <p class="text-sm sm:text-base md:text-lg mb-3 sm:mb-4 opacity-90">{item.description}</p>
                            <span class="shop-now-btn">{item.ctaText}</span>
                        </div>
                    </div>
                </div>
            ))}
        </div>

        <!-- Slider indicators -->
        <div class="absolute z-30 flex -translate-x-1/2 bottom-3 sm:bottom-4 md:bottom-5 left-1/2 space-x-2 sm:space-x-3 rtl:space-x-reverse">
            {items.map((_, index) => (
                <button
                    type="button"
                    class="w-2 h-2 sm:w-3 sm:h-3 rounded-full bg-white/50 hover:bg-white transition-colors"
                    aria-current={index === 0 ? "true" : "false"}
                    aria-label={`Slide ${index + 1}`}
                    data-carousel-slide-to={index}
                ></button>
            ))}
        </div>

        <!-- Slider controls -->
        <button type="button" class="absolute top-0 start-0 z-30 flex items-center justify-center h-full px-2 sm:px-3 md:px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
            <span class="inline-flex items-center justify-center w-8 h-8 sm:w-9 sm:h-9 md:w-10 md:h-10 rounded-full bg-transparent hover:bg-blue-500/50 transition-all duration-200 focus:ring-2 focus:ring-white">
                <svg class="w-3 h-3 sm:w-4 sm:h-4 text-white rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4" />
                </svg>
                <span class="sr-only">Previous</span>
            </span>
        </button>
        <button type="button" class="absolute top-0 end-0 z-30 flex items-center justify-center h-full px-2 sm:px-3 md:px-4 cursor-pointer group focus:outline-none" data-carousel-next>
            <span class="inline-flex items-center justify-center w-8 h-8 sm:w-9 sm:h-9 md:w-10 md:h-10 rounded-full bg-transparent hover:bg-blue-500/50 transition-all duration-200 focus:ring-2 focus:ring-white">
                <svg class="w-3 h-3 sm:w-4 sm:h-4 text-white rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4" />
                </svg>
                <span class="sr-only">Next</span>
            </span>
        </button>
    </div>
</div>

<style is:global>
    /* Base animations with more professional effects */
    @keyframes subtleGlow {
        0% { text-shadow: 0 0 1px rgba(255,255,255,0.2); }
        50% { text-shadow: 0 0 8px rgba(255,255,255,0.4); }
        100% { text-shadow: 0 0 1px rgba(255,255,255,0.2); }
    }

    @keyframes buttonReveal {
        from { 
            opacity: 0; 
            transform: translateY(10px);
        }
        to { 
            opacity: 1; 
            transform: translateY(0);
        }
    }
    
    @keyframes fadeIn {
        from { opacity: 0; }
        to { opacity: 1; }
    }
    
    @keyframes slideUp {
        from { transform: translateY(10px); opacity: 0; }
        to { transform: translateY(0); opacity: 1; }
    }
    
    @keyframes mobileReveal {
        0% { opacity: 0; transform: translateY(10px); }
        100% { opacity: 1; transform: translateY(0); }
    }

    /* Professional font styling */
    .heading-font {
        font-family: 'Montserrat', sans-serif;
        letter-spacing: 0.5px;
    }

    /* Base Carousel Styles */
    .carousel-image {
        object-fit: cover;
        width: 100%;
        height: 100%;
        transition: all 0.8s cubic-bezier(0.19, 1, 0.22, 1);
    }

    .carousel-item-container {
        position: relative;
        height: 100%;
        cursor: pointer;
        overflow: hidden;
        perspective: 1000px;
        touch-action: manipulation;
    }

body, html {
    overflow-x: hidden; 
    width: 100%;
    margin: 0;
    padding: 0;
}

.carousel-wrapper {
    width: 100%;
    position: relative;
   
}

    .carousel-caption {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) !important;
        background: rgba(0, 0, 0, 0.75);
        color: white;
        padding: 2rem;
        width: 90%;
        max-width: 600px;
        text-align: center;
        border-radius: 0.5rem;
        opacity: 0;
        transition: opacity 0.6s cubic-bezier(0.19, 1, 0.22, 1);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        border: 1px solid rgba(255,255,255,0.08);
        backdrop-filter: blur(3px);
    }

    .carousel-caption h3 {
        margin-bottom: 0.5rem;
        transform: translateY(-5px);
        transition: all 0.4s ease;
        opacity: 0;
    }

    .carousel-caption p {
        transform: translateY(5px);
        transition: all 0.4s ease 0.1s;
        opacity: 0;
    }

    .carousel-item-container:hover .carousel-caption,
    .carousel-item-container:active .carousel-caption,
    .carousel-item-container.mobile-active .carousel-caption {
        opacity: 1;
    }

    .carousel-item-container:hover .carousel-caption h3,
    .carousel-item-container:active .carousel-caption h3,
    .carousel-item-container.mobile-active .carousel-caption h3 {
        opacity: 1;
        transform: translateY(0);
        animation: subtleGlow 4s infinite alternate;
    }

    .carousel-item-container:hover .carousel-caption p,
    .carousel-item-container:active .carousel-caption p,
    .carousel-item-container.mobile-active .carousel-caption p {
        opacity: 1;
        transform: translateY(0);
    }

    .shop-now-btn {
        display: inline-block;
        margin-top: 1.25rem;
        padding: 0.7rem 1.8rem;
        background: rgba(0, 0, 0, 0.3);
        color: white;
        border: 1px solid rgba(255,255,255,0.5);
        border-radius: 0.25rem;
        transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
        font-weight: 500;
        letter-spacing: 0.5px;
        position: relative;
        overflow: hidden;
        touch-action: manipulation;
        opacity: 0;
        transform: translateY(10px);
        font-family: 'Montserrat', sans-serif;
        text-transform: uppercase;
        font-size: 0.85rem;
    }

    .carousel-item-container:hover .shop-now-btn,
    .carousel-item-container:active .shop-now-btn,
    .carousel-item-container.mobile-active .shop-now-btn {
        animation: buttonReveal 0.4s ease 0.2s forwards;
    }

    .shop-now-btn:hover,
    .shop-now-btn:active {
        background: #1e40af;
        border-color: #1e40af;
        box-shadow: 0 5px 15px rgba(30,64,175,0.3);
        transform: translateY(-2px);
    }

    .carousel-item-container:hover .carousel-image,
    .carousel-item-container:active .carousel-image,
    .carousel-item-container.mobile-active .carousel-image {
        transform: scale(1.05);
    }

    .carousel-wrapper {
        width: 100vw;
        position: relative;
        left: 50%;
        right: 50%;
        margin-left: -50vw;
        margin-right: -50vw;
    }

    /* Indicator styling improvements */
    [data-carousel-slide-to] {
        transition: all 0.3s ease;
    }

    [data-carousel-slide-to]:hover {
        transform: scale(1.2);
    }
    
    /* Active slide animations */
    .carousel-item.active .carousel-item-container .carousel-caption {
        animation: fadeIn 0.6s ease forwards;
    }
    
    .carousel-item.active .carousel-item-container .carousel-caption h3 {
        animation: slideUp 0.5s ease 0.2s forwards;
    }
    
    .carousel-item.active .carousel-item-container .carousel-caption p {
        animation: slideUp 0.5s ease 0.3s forwards;
    }
    
    .carousel-item.active .carousel-item-container .shop-now-btn {
        animation: buttonReveal 0.5s ease 0.4s forwards;
    }

    /* Desktop-specific styles */
    @media (min-width: 1024px) {
        #default-carousel {
            height: 90vh;
            min-height: 700px;
            max-height: 1000px;
        }
        
        .carousel-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /* Make captions slightly larger on desktop */
        .carousel-caption {
            padding: 2.5rem;
            max-width: 700px;
        }

        .carousel-caption h3 {
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }

        .carousel-caption p {
            font-size: 1.25rem;
            margin-bottom: 1.5rem;
        }

        .shop-now-btn {
            padding: 0.9rem 2.2rem;
            font-size: 1rem;
        }
    }

    /* Mobile Styles (applies to all mobile sizes) */
    @media (max-width: 1023px) {
        #default-carousel {
            height: 100vh !important;
            max-height: -webkit-fill-available;
        }
        
        .carousel-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.8s cubic-bezier(0.19, 1, 0.22, 1) !important;
        }
        
        /* Caption styling for mobile */
        .carousel-caption {
            width: 85%;
            padding: 1.5rem;
            background: rgba(0, 0, 0, 0.6);
            transition: opacity 0.6s cubic-bezier(0.19, 1, 0.22, 1) !important;
        }
        
        .carousel-caption h3 {
            font-size: 1.5rem;
            margin-bottom: 0.75rem;
            transition: all 0.4s ease !important;
        }
        
        .carousel-caption p {
            font-size: 0.95rem;
            margin-bottom: 1rem;
            transition: all 0.4s ease 0.1s !important;
        }
        
        .shop-now-btn {
            padding: 0.6rem 1.5rem;
            font-size: 0.85rem;
            background: rgba(0, 0, 0, 0.6);
            transition: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) !important;
        }
        
        /* Mobile animations - enhanced */
        .carousel-item.active .carousel-item-container .carousel-caption {
            animation: fadeIn 0.8s ease-out forwards;
        }
        
        .carousel-item.active .carousel-item-container .carousel-caption h3 {
            animation: mobileReveal 0.6s ease 0.2s forwards;
        }
        
        .carousel-item.active .carousel-item-container .carousel-caption p {
            animation: mobileReveal 0.6s ease 0.4s forwards;
        }
        
        .carousel-item.active .carousel-item-container .shop-now-btn {
            animation: mobileReveal 0.6s ease 0.6s forwards;
        }
    }
</style>

<script is:inline>
// Using TypeScript in Astro with proper typing
class Carousel {
    constructor(carouselElement) {
        if (!carouselElement) {
            throw new Error('Carousel element not found');
        }

        this.carousel = carouselElement;
        this.items = this.carousel.querySelectorAll('[data-carousel-item]');
        this.indicators = this.carousel.querySelectorAll('[data-carousel-slide-to]');
        this.prevButton = this.carousel.querySelector('[data-carousel-prev]');
        this.nextButton = this.carousel.querySelector('[data-carousel-next]');
        this.carouselItemContainers = this.carousel.querySelectorAll('.carousel-item-container');
        
        this.currentIndex = 0;
        this.autoSlideInterval = null;
        this.touchStartX = 0;
        this.touchEndX = 0;
        this.isMobile = window.innerWidth <= 1023;
        
        this.initEventListeners();
        this.showItem(this.currentIndex);
        this.startAutoSlide();
        
        window.addEventListener('resize', () => {
            this.isMobile = window.innerWidth <= 1023;
        });
    }
    
    initEventListeners() {
        this.indicators.forEach((indicator, index) => {
            indicator.addEventListener('click', () => this.goToSlide(index));
            indicator.addEventListener('touchstart', (e) => {
                e.preventDefault();
                this.goToSlide(index);
            });
        });
        
        if (this.prevButton) {
            this.prevButton.addEventListener('click', () => this.goToPrevSlide());
            this.prevButton.addEventListener('touchstart', (e) => {
                e.preventDefault();
                this.goToPrevSlide();
            });
        }
        
        if (this.nextButton) {
            this.nextButton.addEventListener('click', () => this.goToNextSlide());
            this.nextButton.addEventListener('touchstart', (e) => {
                e.preventDefault();
                this.goToNextSlide();
            });
        }
        
        this.carousel.addEventListener('touchstart', (e) => {
            this.touchStartX = e.changedTouches[0].screenX;
        }, {passive: true});
        
        this.carousel.addEventListener('touchend', (e) => {
            this.touchEndX = e.changedTouches[0].screenX;
            this.handleSwipe();
        }, {passive: true});
    }
    
    handleSwipe() {
        const threshold = 50;
        const difference = this.touchStartX - this.touchEndX;
        
        if (Math.abs(difference) < threshold) return;
        
        if (difference > 0) {
            this.goToNextSlide();
        } else {
            this.goToPrevSlide();
        }
    }
    
    showItem(index) {
        this.items.forEach((item) => {
            item.classList.remove('opacity-100', 'translate-x-0', 'active');
            item.classList.add('opacity-0', 'translate-x-full');
        });
        
        this.indicators.forEach((btn) => {
            btn.classList.remove('bg-white');
            btn.classList.add('bg-white/50');
            btn.setAttribute('aria-current', 'false');
        });
        
        const currentItem = this.items[index];
        currentItem.classList.remove('opacity-0', 'translate-x-full');
        currentItem.classList.add('opacity-100', 'translate-x-0', 'active');
        
        const currentIndicator = this.indicators[index];
        currentIndicator.classList.remove('bg-white/50');
        currentIndicator.classList.add('bg-white');
        currentIndicator.setAttribute('aria-current', 'true');
        
        if (this.isMobile) {
            this.items.forEach((item) => {
                const container = item.querySelector('.carousel-item-container');
                container?.classList.remove('mobile-active');
            });
            
            const activeContainer = currentItem.querySelector('.carousel-item-container');
            activeContainer?.classList.add('mobile-active');
        }
        
        this.resetAutoSlide();
    }
    
    goToSlide(index) {
        if (index < 0 || index >= this.items.length) return;
        this.currentIndex = index;
        this.showItem(this.currentIndex);
    }
    
    goToNextSlide() {
        this.currentIndex = (this.currentIndex + 1) % this.items.length;
        this.showItem(this.currentIndex);
    }
    
    goToPrevSlide() {
        this.currentIndex = (this.currentIndex - 1 + this.items.length) % this.items.length;
        this.showItem(this.currentIndex);
    }
    
    startAutoSlide() {
        this.autoSlideInterval = window.setInterval(() => {
            this.goToNextSlide();
        }, 5000);
    }
    
    resetAutoSlide() {
        this.stopAutoSlide();
        this.startAutoSlide();
    }
    
    stopAutoSlide() {
        if (this.autoSlideInterval) {
            clearInterval(this.autoSlideInterval);
            this.autoSlideInterval = null;
        }
    }
}

// Initialize carousel when DOM is fully loaded
document.addEventListener('DOMContentLoaded', () => {
    const carouselElement = document.querySelector('[data-carousel="static"]');
    
    try {
        if (carouselElement) {
            const carousel = new Carousel(carouselElement);
            
            setTimeout(() => {
                const activeItem = document.querySelector('[data-carousel-item].opacity-100');
                activeItem?.classList.add('active');
            }, 100);
        } else {
            console.warn('Carousel element not found');
        }
    } catch (error) {
        console.error('Carousel initialization failed:', error);
    }
});
</script>
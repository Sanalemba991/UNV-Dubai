---
import type { CollectionEntry } from "astro:content";
import AvatarTestimonial from "~/components/ui/AvatarTestimonial.astro";

const { title, testimonials } = Astro.props;

interface Props {
  title: string;
  testimonials: CollectionEntry<"testimonials">[];
}
---

<!-- Main div that wraps the testimonials section -->


<section
  id="testimonials"
  class="mx-auto max-w-[85rem] px-0 py-10 sm:px-2 lg:px-8 lg:py-14 2xl:max-w-full opacity-0"
><div class="mb-0 w-full sm:mb-2 md:mb-4 text-center">
  <h2 class="text-balance text-2xl text-neutral-800 dark:text-neutral-200 sm:text-3xl lg:text-4xl">
    {title}
  </h2>
</div>
  <!-- Title of the testimonials section -->
  <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
    <!-- Looping through each testimonial data and rendering it -->
    {testimonials.map((testimonial) => (
      <div class="flex h-auto">
        <div class="flex flex-col rounded-xl bg-neutral-50 dark:bg-neutral-700">
          <div class="flex-auto p-2 md:p-2">
            <!-- Testimonial content -->
            <p class="text-pretty text-base italic text-neutral-600 dark:text-neutral-300 md:text-lg">
              {testimonial.data.content}
            </p>
          </div>

          <div class="rounded-b-xl bg-neutral-300/30 p-4 dark:bg-neutral-900/30 md:px-7">
            <div class="flex items-center">
              <AvatarTestimonial
                src={testimonial.data.avatarSrc.src}
                alt={testimonial.data.avatarAlt}
              />
              <div class="ms-3 grow">
                <p class="text-sm text-neutral-800 dark:text-neutral-200 sm:text-base">
                  {testimonial.data.author}
                </p>
                <p class="text-xs text-neutral-600 dark:text-neutral-400">
                  {testimonial.data.role}
                </p>
              </div>
            </div>
          </div>
        </div>
      </div>
    ))}
  </div>
</section>

<!-- Add the necessary styles for animation -->
<style lang="css">
  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(50px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in-up {
    animation: fadeInUp 1.5s ease-out forwards;
    opacity: 0;
  }
</style>

<!-- JavaScript for IntersectionObserver -->
<script type="module">
  if (typeof window !== "undefined") {
    const section = document.querySelector("#testimonials");

    const observer = new IntersectionObserver((entries, observer) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          section.classList.add("fade-in-up");
          observer.unobserve(entry.target); // Stop observing once animation is triggered
        }
      });
    }, { threshold: 0.3 });

    observer.observe(section);
  }
</script>

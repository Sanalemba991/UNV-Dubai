---
// Import necessary components and utilities
import Layout from "~/layouts/Layout.astro";
import AvatarBlogLarge from "~/components/ui/AvatarBlogLarge.astro";
import CardRelated from "~/components/blogs/CardRelated.astro";
import Bookmark from "~/components/ui/blog/Bookmark.astro";
import SocialShare from "~/components/ui/blog/SocialShare.astro";
import PostFeedback from "~/components/ui/blog/PostFeedback.astro";
import { Image } from "astro:assets";
import { capitalize, formatDate } from "../../utils/utils";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";

// Define Props interface
interface Props {
  post: CollectionEntry<"blog">;
}

// This function MUST be named getStaticPaths and properly exported
export async function getStaticPaths() {
  const blogPosts = await getCollection("blog");
  
  return blogPosts.map((post) => {
    return {
      params: { slug: post.slug },
      props: { post },
    };
  });
}

// Get the current post's data from props
const { post } = Astro.props;

// Get all blog posts for related posts section
const allBlogPosts = await getCollection("blog");
const relatedPosts = allBlogPosts
  .filter(blogEntry => blogEntry.slug !== post.slug)
  .slice(0, 4);
// SEO meta data
const title = `${post.data.title} | UNV Camera Dubai Blog`;
const description = post.data.description || post.data.contents[0]?.substring(0, 160) + '...';
const canonicalUrl = new URL(`/blog/${post.slug}`, Astro.site);


// JSON-LD Structured Data
const structuredData = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": post.data.title,
  "description": description,
  "url": canonicalUrl.toString(),
  "image": `${Astro.site}${post.data.cardImage.src}`,
  "datePublished": post.data.pubDate,
  "dateModified": post.data.pubDate, // Update if you have modified date
  "author": {
    "@type": "Person",
    "name": post.data.author || "UNV Dubai",
    "url": Astro.site
  },
  "publisher": {
    "@type": "Organization",
    "name": "UNV Dubai",
    "logo": {
      "@type": "ImageObject",
      "url": `${Astro.site}/images/unvdubai.png` // Update with your logo path
    }
  },
  "mainEntityOfPage": {
    "@type": "WebPage",
    "@id": canonicalUrl.toString()
  },
  "keywords": post.data.tags?.join(", ") || "",
  "articleBody": post.data.contents.join(" ")
};
const { Content } = await post.render();
---
<meta charset="UTF-8" />
<Layout 
  title={title}
  description={description}
  canonical={canonicalUrl.toString()}

  structuredData={structuredData}
>
  <!-- Main blog post section with fade-in animation -->
  <section class="mx-auto max-w-3xl px-4 pb-12 pt-6 sm:pt-10 md:pt-12 lg:pt-16 transition-all duration-700 sm:px-6 lg:px-8 animate-[fadeIn_0.7s_ease-in-out]">
    <div class="max-w-2xl mt-10 sm:mt-12 md:mt-0">
      <!-- Author and date info with slide-in animation -->
      <div class="mb-6 flex items-center justify-between animate-[slideInRight_0.6s_ease-out]">
        <div class="flex w-full gap-x-5 sm:items-center sm:gap-x-3">
          <div class="transition-transform duration-300 hover:scale-105">
            <AvatarBlogLarge blogEntry={post} />
          </div>
          <div class="grow">
            <div class="flex items-center justify-between gap-x-2">
              <div>
                <div class="hs-tooltip inline-block [--placement:bottom] [--trigger:hover]">
                  <span class="font-bold text-neutral-700 dark:text-neutral-300 hover:text-neutral-900 dark:hover:text-neutral-100 transition-colors duration-300">
                    {post.data.author}
                  </span>
                </div>
                <ul class="text-xs text-neutral-500">
                  <li class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600">
                    {formatDate(post.data.pubDate)}
                  </li>
                  <li class="relative inline-block pe-6 before:absolute before:end-2 before:top-1/2 before:size-1 before:-translate-y-1/2 before:rounded-full before:bg-neutral-300 last:pe-0 last-of-type:before:hidden dark:text-neutral-400 dark:before:bg-neutral-600">
                    {post.data.readTime} min read
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Blog post title with gradient effect -->
      <h2 class="mb-3 text-2xl font-bold bg-gradient-to-r from-neutral-800 to-neutral-600 bg-clip-text text-transparent transition-all duration-700 animate-[fadeInUp_0.8s_ease-out] dark:from-neutral-200 dark:to-neutral-400 md:text-3xl">
        {post.data.title}
      </h2>

      <!-- Blog post contents with staggered animations -->
      <div class="mb-5 space-y-5 md:mb-8 md:space-y-8">
        {post.data.contents.map((content: string, index: number) => (
          index === 1 ? (
            <>
              <p class="text-pretty text-lg text-neutral-700 dark:text-neutral-300 animate-[fadeInUp_0.7s_ease-out] [animation-delay:200ms] [animation-fill-mode:both]">
                {content}
              </p>
              <!-- Image with hover effect and shadow -->
              <div class="overflow-hidden rounded-xl shadow-lg transition-all duration-500 hover:shadow-xl animate-[fadeInUp_0.7s_ease-out] [animation-delay:400ms] [animation-fill-mode:both]">
                <img 
                  class="w-full object-cover transition-transform duration-500 hover:scale-105 rounded-xl"
                  src={post.data.cardImage.src}
                  alt={post.data.cardImageAlt}
                  draggable="false"
                  width="800"
                  height="450"
                  loading="lazy"
                />
              </div>
            </>
          ) : (
            <p class={`text-pretty text-lg text-neutral-700 dark:text-neutral-300 animate-[fadeInUp_0.7s_ease-out] [animation-delay:${(index+1)*200}ms] [animation-fill-mode:both]`}>
              {content}
            </p>
          )
        ))}
      </div>

      <!-- Tags and social sharing with slide-up animation -->
      <div class="mx-auto grid max-w-screen-lg gap-y-5 sm:flex sm:items-center sm:justify-between sm:gap-y-0 animate-[fadeInUp_0.7s_ease-out] [animation-delay:600ms] [animation-fill-mode:both]">
        <!-- Blog post tags with hover effect -->
        <div class="flex flex-wrap gap-x-2 gap-y-1 sm:flex-nowrap sm:items-center sm:gap-y-0">
          {post.data.tags?.map((tag: string) => (
            <span class="inline-flex items-center gap-x-1.5 rounded-lg bg-neutral-400/30 px-3 py-1.5 text-xs font-medium text-neutral-700 transition-all duration-300 hover:bg-neutral-400/50 hover:scale-105 outline-none focus:outline-none focus-visible:outline-none focus-visible:ring dark:bg-neutral-700/60 dark:text-neutral-300 dark:hover:bg-neutral-700/80">
              {capitalize(tag)}
            </span>
          ))}
        </div>

        <!-- Bookmark and Share buttons with hover effects -->
        <div class="flex items-center justify-end gap-x-1.5">
          <div class="transition-transform duration-300 hover:scale-110">
            <Bookmark />
          </div>
          <div class="mx-3 block h-4 border-e border-neutral-400 dark:border-neutral-500"></div>
          <div class="inline-flex transition-transform duration-300 hover:scale-110">
            <SocialShare pageTitle={post.data.title} />
          </div>
        </div>
      </div>
    </div>

    <!-- Post feedback section with delay animation -->
    <div class="animate-[fadeIn_0.7s_ease-out] [animation-delay:800ms] [animation-fill-mode:both] mt-8 sm:mt-10">
      <PostFeedback
        title="Was this post helpful?"
        firstChoice="Yes"
        secondChoice="No"
      />
    </div>
  </section>

  <!-- Related articles section with fade-in animation -->
  {relatedPosts.length > 0 && (
    <section class="mx-auto max-w-3xl px-4 py-10 sm:px-6 lg:px-8 lg:py-14 animate-[fadeIn_1s_ease-out] [animation-delay:1000ms] [animation-fill-mode:both] mt-12 sm:mt-16">
      <div class="mb-10 max-w-2xl">
        <h2 class="text-balance text-2xl font-bold text-neutral-800 dark:text-neutral-200 md:text-4xl md:leading-tight bg-gradient-to-r from-neutral-800 to-neutral-600 bg-clip-text text-transparent dark:from-neutral-200 dark:to-neutral-400">
          Related articles
        </h2>
      </div>

      <!-- Related posts grid with staggered animations -->
      <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
        {relatedPosts.map((entry, i) => (
          <div class={`transition-all duration-500 hover:scale-[1.03] hover:shadow-lg rounded-xl animate-[fadeInUp_0.7s_ease-out] [animation-delay:${(i+1)*200 + 1000}ms] [animation-fill-mode:both]`}>
            <CardRelated blogEntry={entry} />
          </div>
        ))}
      </div>
    </section>
  )}
  
  <!-- Add a subtle floating background grid -->
  <div class="fixed inset-0 -z-10 h-full w-full bg-white dark:bg-neutral-900 opacity-50">
    <div class="absolute inset-0 bg-[linear-gradient(to_right,#f0f0f0_1px,transparent_1px),linear-gradient(to_bottom,#f0f0f0_1px,transparent_1px)] bg-[size:24px_24px] [mask-image:radial-gradient(ellipse_60%_50%_at_50%_0%,#000_70%,transparent_110%)] dark:bg-[linear-gradient(to_right,#303030_1px,transparent_1px),linear-gradient(to_bottom,#303030_1px,transparent_1px)]"></div>
  </div>

  <!-- Additional styles for animations -->
  <style is:global>
    @keyframes fadeIn {
      from { opacity: 0; }
      to { opacity: 1; }
    }
    
    @keyframes fadeInUp {
      from { 
        opacity: 0;
        transform: translateY(20px);
      }
      to { 
        opacity: 1;
        transform: translateY(0);
      }
    }
    
    @keyframes slideInRight {
      from {
        opacity: 0;
        transform: translateX(-20px);
      }
      to {
        opacity: 1;
        transform: translateX(0);
      }
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      /* Adjust main content padding */
      .blog-content section {
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
      
      /* Reduce font sizes on mobile */
      .blog-content h2 {
        font-size: 1.75rem;
        line-height: 2rem;
      }
      
      /* Adjust content spacing */
      .blog-content .space-y-5 > * + * {
        margin-top: 1rem;
      }
    }
  </style>
</Layout>
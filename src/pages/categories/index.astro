---
import Layout from "~/layouts/Layout.astro";
import CategoryCard from "~/components/CategoryCard.astro";
import Sections from "~/components/Sections.astro";

const title = "Product Categories | Surveillance Solutions";
const description = "Explore our comprehensive range of surveillance solutions including IP cameras, analog cameras, PTZ cameras, thermal cameras, NVR, DVR, storage solutions, and accessories.";
const canonicalURL = new URL("/categories", Astro.site);

// Enhanced SEO metadata
const metadata = {
    title: title,
    description: description,
    canonical: canonicalURL.toString(),
    openGraph: {
        basic: {
            title: title,
            type: "website",
            image: "/images/og-image.png",
            url: canonicalURL.toString(),
        },
        optional: {
            description: description,
            locale: "en_US",
            siteName: "UNV Dubai",
        },
    },
    twitter: {
        card: "summary_large_image",
        title: title,
        description: description,
        image: "/images/og-image.png",
    },
    alternates: {
        canonical: canonicalURL.toString(),
    },
};

// Define your categories data
const categories = [
    {
        title: "IP Cameras",
        description:
            "Network cameras with high resolution and advanced features for professional surveillance systems",
        imageUrl: "images/categories/ip-camera.png",
        href: "/categories/ip-cameras",
        icon: "video",
    },
    {
        title: "Analog Camera",
        description:
            "Traditional CCTV cameras offering reliable surveillance at an economical price point",
        imageUrl: "images/categories/analog-camera.png",
        href: "/categories/analog-cameras",
        icon: "camera",
    },
    {
        title: "PTZ CAMERA",
        description:
            "Pan-Tilt-Zoom cameras with remote directional and zoom control capabilities",
        imageUrl: "images/categories/ptz-camera.png",
        href: "/categories/ptz-cameras",
        icon: "rotate-cw",
    },
    {
        title: "Thermal Camera",
        description:
            "Advanced thermal imaging cameras for temperature detection and night vision",
        imageUrl: "images/categories/thermal-camera.png",
        href: "/categories/thermal-cameras",
        icon: "thermometer",
    },
    {
        title: "NVR",
        description:
            "Network Video Recorders for managing and storing IP camera footage",
        imageUrl: "images/categories/nvr.png",
        href: "/categories/nvr",
        icon: "hard-drive",
    },
    {
        title: "DVR",
        description:
            "Digital Video Recorders for recording and managing analog camera systems",
        imageUrl: "images/categories/dvr.png",
        href: "/categories/dvr",
        icon: "server",
    },
    {
        title: "Storage",
        description:
            "Professional surveillance storage solutions including HDDs and storage arrays",
        imageUrl: "images/categories/storage.png",
        href: "/categories/storage",
        icon: "database",
    },
    {
        title: "Accessories",
        description:
            "Essential surveillance system accessories including cables, mounts, and power supplies",
        imageUrl: "images/categories/accessories.png",
        href: "/categories/accessories",
        icon: "tool",
    },
];

// Enhanced Schema.org markup
const schemaData = [
    // Breadcrumb schema
    {
        "@context": "https://schema.org",
        "@type": "BreadcrumbList",
        "itemListElement": [
            {
                "@type": "ListItem",
                "position": 1,
                "name": "Home",
                "item": Astro.site.toString()
            },
            {
                "@type": "ListItem",
                "position": 2,
                "name": "Product Categories",
                "item": canonicalURL.toString()
            }
        ]
    },
    // Enhanced ItemList schema
    {
        "@context": "https://schema.org",
        "@type": "ItemList",
        "name": "Surveillance Product Categories",
        "description": "Complete list of surveillance product categories available at UNV Dubai",
        "url": canonicalURL.toString(),
        "numberOfItems": categories.length,
        "itemListElement": categories.map((category, index) => ({
            "@type": "ListItem",
            "position": index + 1,
            "item": {
                "@type": "ProductCategory",
                "name": category.title,
                "description": category.description,
                "image": new URL(category.imageUrl, Astro.site).toString(),
                "url": new URL(category.href, Astro.site).toString()
            }
        }))
    },
    // Organization schema
    {
        "@context": "https://schema.org",
        "@type": "Organization",
        "name": "UNV Dubai",
        "url": Astro.site.toString(),
        "logo": new URL("/images/logo.png", Astro.site).toString(),
        "sameAs": [
            "https://www.facebook.com/unvdubai",
            "https://www.twitter.com/unvdubai",
            "https://www.linkedin.com/company/unv-dubai"
        ]
    },
    // WebPage schema
    {
        "@context": "https://schema.org",
        "@type": "WebPage",
        "name": title,
        "description": description,
        "url": canonicalURL.toString(),
        "breadcrumb": {
            "@type": "BreadcrumbList",
            "itemListElement": [
                {
                    "@type": "ListItem",
                    "position": 1,
                    "name": "Home",
                    "item": Astro.site.toString()
                },
                {
                    "@type": "ListItem",
                    "position": 2,
                    "name": "Product Categories",
                    "item": canonicalURL.toString()
                }
            ]
        }
    }
];

// Convert schema to string
const schemaString = JSON.stringify(schemaData);
---

<Layout
    title={metadata.title}
    description={metadata.description}
    canonical={metadata.canonical}
    openGraph={metadata.openGraph}
    twitter={metadata.twitter}
>
<div class="bg-gradient-to-b from-gray-50 to-white dark:from-neutral-950 dark:to-neutral-900">
    <Sections>
        <!-- Breadcrumbs markup (important for rich results) -->
        <nav class="flex mb-8" aria-label="Breadcrumb">
            <ol class="inline-flex items-center space-x-1 md:space-x-2">
                <li class="inline-flex items-center">
                    <a href="/" class="inline-flex items-center text-sm font-medium text-gray-700 hover:text-indigo-600 dark:text-gray-400 dark:hover:text-white">
                        Home
                    </a>
                </li>
                <li aria-current="page">
                    <div class="flex items-center">
                        <svg class="w-3 h-3 mx-1 text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
                        </svg>
                        <span class="ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400">Product Categories</span>
                    </div>
                </li>
            </ol>
        </nav>

        <div class="py-8">
            <!-- Rest of your content remains the same -->
        </div>
    </Sections>
</div>
    
    <!-- Schema.org JSON-LD -->
    <script type="application/ld+json" set:html={schemaString}></script>
</Layout>
--- 
import Layout from "../../../layouts/Layout.astro"; 
import { getCollection } from "astro:content";  

type Props = { 
    product: Product; 
};

interface ProductSpecifications { 
    sensor: string; 
    resolution: string; 
    focalLength: string; 
    irRange: string; 
    powerSupply: string; 
    protection: string; 
    storage: string; 
    dimensions: string; 
} 

interface Product { 
    title: string; 
    description: string; 
    image: string; 
    features: string[]; 
    specifications: ProductSpecifications; 
} 

export async function getStaticPaths() { 
    const ipCameras = await getCollection("ip-cameras"); 
    return ipCameras.map((entry) => ({ 
        params: { slug: entry.slug }, 
        props: { product: entry.data as Product }, 
    })); 
} 

const { product } = Astro.props as Props; 
--- 

<Layout 
    title={`${product.title} - UNV Dubai`} 
    description={product.description} 
> 
    <section class="py-16 relative overflow-hidden"> 
        <!-- Floating background elements --> 
        <div class="absolute w-96 h-96 -top-48 -left-48 rounded-full bg-blue-500/5 blur-3xl animate-float-slow"></div> 
        <div class="absolute w-96 h-96 -bottom-48 -right-48 rounded-full bg-indigo-500/5 blur-3xl animate-float-slow-reverse"></div> 

        <div class="container mx-auto px-4 max-w-6xl relative"> 
            <!-- Breadcrumb Navigation --> 
            <div class="mb-8 slide-in-left"> 
                <div class="flex items-center space-x-2 text-sm"> 
                    <a href="/" class="text-gray-500 hover:text-blue-600 transition-colors">Home</a> 
                    <span class="text-gray-400">/</span> 
                    <a href="/categories/ip-cameras" class="text-gray-500 hover:text-blue-600 transition-colors">IP Cameras</a> 
                    <span class="text-gray-400">/</span> 
                    <span class="text-blue-600 font-medium">{product.title}</span> 
                </div> 
            </div> 

            <!-- Product Header --> 
            <div class="text-center mb-8 fade-in-up"> 
                <h1 class="text-4xl font-bold text-gray-900 mb-2 animate-title-reveal">{product.title}</h1> 
                <p class="text-gray-600 max-w-3xl mx-auto animate-fade-up">{product.description}</p> 
            </div> 

            <div class="grid lg:grid-cols-2 gap-8 slide-in-bottom"> 
                <!-- Product Image --> 
                <div class="relative group"> 
                    <img 
                        src={product.image} 
                        alt={product.title} 
                        class="w-full rounded-lg shadow-lg transform transition-transform duration-700 group-hover:scale-105" 
                    /> 
                </div> 

                <!-- Product Details --> 
                <div class="bg-white rounded-lg p-6 shadow-lg relative overflow-hidden"> 
                    <!-- Animated background pattern --> 
                    <div class="absolute inset-0 opacity-5"> 
                        <div class="absolute inset-0 bg-[url('/circuit-pattern.svg')] bg-repeat"></div> 
                    </div> 

                    <div class="relative space-y-6"> 
                        <!-- Tabs for Features and Specifications --> 
                        <div class="tabs-container"> 
                            <div class="relative flex border-b border-gray-200 mb-4"> 
                                <button 
                                    class="tab-button flex-1 active px-4 py-3 text-sm font-semibold transition-all duration-300 relative focus:outline-none" 
                                    data-tab="features" 
                                    aria-selected="true" 
                                > 
                                    <span class="relative z-10">Features</span> 
                                    <div class="tab-indicator absolute bottom-0 inset-x-0 h-0.5 bg-blue-600 transition-all duration-300"></div> 
                                </button> 
                                <button 
                                    class="tab-button flex-1 px-4 py-3 text-sm font-semibold transition-all duration-300 relative focus:outline-none" 
                                    data-tab="specifications" 
                                    aria-selected="false" 
                                > 
                                    <span class="relative z-10">Specifications</span> 
                                    <div class="tab-indicator absolute bottom-0 inset-x-0 h-0.5 bg-transparent transition-all duration-300"></div> 
                                </button> 
                            </div> 

                            <!-- Features Tab Content --> 
                            <div class="tab-content block animate-fade" id="features"> 
                                <div class="space-y-3"> 
                                    {product.features.map((feature, index) => ( 
                                        <div class="feature-item flex items-start gap-3 p-2 rounded-lg hover:bg-blue-50 transition-colors duration-300 opacity-0 animate-slide-in" style={`animation-delay: ${index * 100}ms;`}> 
                                            <div class="flex-shrink-0 w-6 h-6 rounded-full bg-blue-100 flex items-center justify-center text-blue-600"> 
                                                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> 
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path> 
                                                </svg> 
                                            </div> 
                                            <div> 
                                                <h3 class="text-sm font-medium text-gray-900">{feature}</h3> 
                                            </div> 
                                        </div> 
                                    ))} 
                                </div> 
                            </div> 

                            <!-- Specifications Tab Content --> 
                            <div class="tab-content hidden animate-fade" id="specifications"> 
                                <div class="grid grid-cols-2 gap-3"> 
                                    {Object.entries(product.specifications).map(([key, value], index) => ( 
                                        <div class="spec-item p-3 rounded-lg bg-gray-50 opacity-0 animate-slide-in" style={`animation-delay: ${index * 100}ms;`}> 
                                            <div class="text-xs text-gray-500">{key}</div> 
                                            <div class="text-sm font-bold text-gray-900">{value}</div> 
                                        </div> 
                                    ))} 
                                </div> 
                            </div> 
                        </div> 

                        <!-- CTA Buttons --> 
                        <div class="space-y-3">
                            <a
                                href="/contact"
                                class="group relative inline-flex items-center justify-center w-auto px-3 py-1.5 rounded-lg bg-gradient-to-br from-blue-600 to-indigo-600 text-white font-semibold overflow-hidden hover:shadow-blue-500/20 transition-all duration-300"
                            >
                                <span class="absolute inset-0 w-full h-full bg-gradient-to-br from-blue-500 to-indigo-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></span>
                                <span class="relative z-10">Request Quote</span>
                                <svg
                                    class="ml-2 w-4 h-4 text-white transition-transform duration-300 group-hover:translate-x-2"
                                    xmlns="http://www.w3.org/2000/svg"
                                    fill="none"
                                    viewBox="0 0 24 24"
                                    stroke="currentColor"
                                >
                                    <path
                                        stroke-linecap="round"
                                        stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M9 5l7 7-7 7"
                                    />
                                </svg>
                            </a>
                        </div>
                        
                    </div> 
                </div> 
            </div> 

            <!-- Related Products Section --> 
            <div class="mt-16 slide-in-bottom-delay"> 
                <div class="text-center mb-8"> 
                    <h2 class="text-2xl font-bold text-gray-900">Related Products</h2> 
                    <div class="mt-2 w-16 h-1 bg-blue-600 mx-auto rounded-full"></div> 
                </div> 
                <div class="grid grid-cols-1 md:grid-cols-3 gap-6"> 
                    <!-- Related product cards would go here --> 
                </div> 
            </div> 
        </div> 
    </section> 
</Layout> 

<style> 
    @keyframes float { 
        0% { transform: translateY(0px); } 
        50% { transform: translateY(-15px); } 
        100% { transform: translateY(0px); } 
    } 

    @keyframes float-slow { 
        0% { transform: translateY(0px); } 
        50% { transform: translateY(-10px); } 
        100% { transform: translateY(0px); } 
    } 

    @keyframes float-slow-reverse { 
        0% { transform: translateY(0px); } 
        50% { transform: translateY(10px); } 
        100% { transform: translateY(0px); } 
    } 

    @keyframes slide-in-left { 
        from { transform: translateX(-30px); opacity: 0; } 
        to { transform: translateX(0); opacity: 1; } 
    } 

    @keyframes slide-in-bottom { 
        from { transform: translateY(30px); opacity: 0; } 
        to { transform: translateY(0); opacity: 1; } 
    } 

    @keyframes slide-in-bottom-delay { 
        from { transform: translateY(30px); opacity: 0; } 
        to { transform: translateY(0); opacity: 1; } 
    } 

    @keyframes fade-in-up { 
        from { transform: translateY(20px); opacity: 0; } 
        to { transform: translateY(0); opacity: 1; } 
    } 

    @keyframes title-reveal { 
        from { transform: translateY(20px); opacity: 0; } 
        to { transform: translateY(0); opacity: 1; } 
    } 

    @keyframes slide-in { 
        from { transform: translateX(-30px); opacity: 0; } 
        to { transform: translateX(0); opacity: 1; } 
    } 

    .animate-float { 
        animation: float 6s ease-in-out infinite; 
    } 

    .animate-float-slow { 
        animation: float-slow 8s ease-in-out infinite; 
    } 

    .animate-float-slow-reverse { 
        animation: float-slow-reverse 8s ease-in-out infinite; 
    } 

    .slide-in-left { 
        animation: slide-in-left 0.8s ease-out forwards; 
    } 

    .slide-in-bottom { 
        animation: slide-in-bottom 0.8s ease-out forwards; 
    } 

    .slide-in-bottom-delay { 
        animation: slide-in-bottom 0.8s ease-out 0.5s forwards; 
    } 

    .fade-in-up { 
        animation: fade-in-up 0.8s ease-out forwards; 
    } 

    .animate-title-reveal { 
        animation: title-reveal 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards; 
    } 

    .animate-slide-in { 
        animation: slide-in 0.6s ease-out forwards; 
    } 

    .tab-button.active .tab-indicator { 
        background-color: #2563eb; /* Blue-600 color */ 
    } 

    .tab-button:not(.active) .tab-indicator { 
        background-color: transparent; 
    } 

    .container { 
        max-width: 1200px; 
        margin: 0 auto; 
        padding: 0 20px; 
    } 

    .rounded-lg { 
        border-radius: 0.5rem; 
    } 

    .shadow-lg { 
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); 
    } 

    .bg-gray-50 { 
        background-color: #f9fafb; 
    } 

    .text-blue-600 { 
        color: #2563eb; 
    } 

    .hover\:bg-blue-700:hover { 
        background-color: #1d4ed8; 
    } 

    .hover\:bg-gray-50:hover { 
        background-color: #f9fafb; 
    } 

    .transition-colors { 
        transition: background-color 0.3s ease; 
    } 
</style> 

<script> 
    document.addEventListener("DOMContentLoaded", () => { 
        // Tab functionality 
        const tabs = document.querySelectorAll(".tab-button"); 
        const contents = document.querySelectorAll(".tab-content"); 

        // Set initial active state 
        const initialActiveTab = document.querySelector('[data-tab="features"]'); 
        setActiveTab(initialActiveTab); 

        tabs.forEach((tab) => { 
            tab.addEventListener("click", () => { 
                tabs.forEach((t) => t.setAttribute("aria-selected", "false")); 
                setActiveTab(tab); 

                const targetId = tab.getAttribute("data-tab"); 
                contents.forEach((content) => { 
                    if (content.id === targetId) { 
                        content.classList.remove("hidden"); 
                        content.classList.add("block"); 

                        // Trigger fade animation 
                        content.classList.remove("animate-fade"); 
                        void content.offsetWidth; // Force reflow 
                        content.classList.add("animate-fade"); 
                    } else { 
                        content.classList.remove("block"); 
                        content.classList.add("hidden"); 
                    } 
                }); 
            }); 
        }); 

        function setActiveTab(tab) { 
            tab.setAttribute("aria-selected", "true"); 
            const indicator = tab.querySelector(".tab-indicator"); 
            indicator.style.backgroundColor = "#2563eb"; // Blue-600 color 

            // Remove underline from the other tab 
            tabs.forEach((t) => { 
                if (t !== tab) { 
                    const otherIndicator = t.querySelector(".tab-indicator"); 
                    otherIndicator.style.backgroundColor = "transparent"; 
                } 
            }); 
        } 
    }); 
</script>
